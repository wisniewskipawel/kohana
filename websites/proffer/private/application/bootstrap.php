<?php/*** @author       AkoSoft Team <biuro@akosoft.pl>* @link         http://www.akosoft.pl* @copyright    Copyright (c) 2016, AkoSoft*/require_once APPPATH.'defines.php';define('AKOSOFT_PATH', MODPATH.'akosoft/core/');// -- Environment setup --------------------------------------------------------// Load the core Kohana classrequire SYSPATH.'classes/Kohana/Core'.EXT;if (is_file(APPPATH.'classes/Kohana'.EXT)){	// Application extends the core	require APPPATH.'classes/Kohana'.EXT;}elseif (is_file(AKOSOFT_PATH.'classes/Kohana'.EXT)){	require AKOSOFT_PATH.'classes/Kohana'.EXT;}else{	// Load empty core extension	require SYSPATH.'classes/Kohana'.EXT;}/** * Set the default time zone. * * @see  http://kohanaframework.org/guide/using.configuration * @see  http://php.net/timezones */date_default_timezone_set('Europe/Warsaw');/** * Set the default locale. * * @see  http://kohanaframework.org/guide/using.configuration * @see  http://php.net/setlocale */setlocale(LC_ALL, 'pl_PL.utf-8');/* Composer class loader */Kohana::$autoloader = require DOCROOT.'private/vendor/autoload.php';/** * Enable the Kohana auto-loader. * * @link http://kohanaframework.org/guide/using.autoloading * @link http://www.php.net/manual/function.spl-autoload-register */spl_autoload_register(array('Kohana', 'auto_load'));/** * Optionally, you can enable a compatibility auto-loader for use with * older modules that have not been updated for PSR-0. * * It is recommended to not enable this unless absolutely necessary. */spl_autoload_register(array('Kohana', 'auto_load_lowercase'));/** * Enable the Kohana auto-loader for unserialization. * * @see  http://php.net/spl_autoload_call * @see  http://php.net/manual/var.configuration.php#unserialize-callback-func */ini_set('unserialize_callback_func', 'spl_autoload_call');// -- Configuration and initialization -----------------------------------------if (isset($_SERVER['SERVER_PROTOCOL'])){	// Replace the default protocol.	HTTP::$protocol = $_SERVER['SERVER_PROTOCOL'];}/** * Set Kohana::$environment if a 'KOHANA_ENV' environment variable has been supplied. * * Note: If you supply an invalid environment name, a PHP warning will be thrown * saying "Couldn't find constant Kohana::<INVALID_ENV_NAME>" */Kohana::$environment = Kohana::PRODUCTION;if (getenv('KOHANA_ENV') !== FALSE){	Kohana::$environment = constant('Kohana::'.strtoupper(getenv('KOHANA_ENV')));}Kohana::$config = new Config;Kohana::$config->attach(new Config_File());if(Kohana::$environment !== Kohana::PRODUCTION){	Kohana::$config->attach(new Config_File('config/dev'));}//Kohana initKohana::init(Kohana::$config->load('init')->as_array());//Add important modulesKohana::add_modules('modules', array(	'database'			=> MODPATH.'kohana'.DIRECTORY_SEPARATOR.'database',	'database_mysqli'	=> MODPATH.'kohana'.DIRECTORY_SEPARATOR.'database_mysqli',	'cache'				=> MODPATH.'kohana'.DIRECTORY_SEPARATOR.'cache',	'I18n_Plural'		=> MODPATH.'kohana'.DIRECTORY_SEPARATOR.'I18n_Plural',));/** * Attach the file write to logging. */Kohana::$log->attach(	new Log_File(APPPATH.'logs'),	(Kohana::$environment === Kohana::PRODUCTION ? Log::INFO : array()));//Attach AkoSoft DB configKohana::$config->attach(new Akosoft_Config(array(	'cache' => (Kohana::$environment === Kohana::DEVELOPMENT ? NULL : Cache::instance('config')),)), FALSE);//Set languageI18n::$lang = Site::config('language.default', 'pl');//set pathsAkoSoft::$templates_path = DOCROOT.'private'.DIRECTORY_SEPARATOR.'templates'.DIRECTORY_SEPARATOR;AkoSoft::$tmp_path = DOCROOT.'private'.DIRECTORY_SEPARATOR.'tmp'.DIRECTORY_SEPARATOR;//load AkoSoft bootstraprequire_once AKOSOFT_PATH.'bootstrap.php';//routes overwritesif(is_file(APPPATH.'routes.php')){	include APPPATH.'routes.php';}//other settingsCookie::$salt = Kohana::$config->load('site.cookies.salt');Upload::$default_directory = '_upload';Session::$default = Kohana::$config->load('session')->get('default', 'native');//settings overwrites and otherif(is_file(APPPATH.'app.php')){	include APPPATH.'app.php';}